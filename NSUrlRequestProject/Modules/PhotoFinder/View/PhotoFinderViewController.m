//
//  PhotoFinderViewController.m
//  NSUrlRequestProject
//
//  Created pockerhead on 18/04/2019.
//  Copyright Â© 2019 Alexey Levanov. All rights reserved.
//
//  Template generated by Balashov Artem @pockerhead
//

#import "PhotoFinderViewController.h"
#import "ImageCell.h"
#import <UIKit/UIKit.h>

@interface PhotoFinderViewController () <PhotoFinderView, UICollectionViewDelegate, UICollectionViewDataSource, UISearchBarDelegate>

@property (strong, nonatomic) UICollectionView *collectionView;
@property (strong, nonatomic) NSArray <Photo *> *dataSource;
@property (strong, nonatomic) UISearchController *searchController;

@end

@implementation PhotoFinderViewController

static NSString *const imageCellIndetifier = @"ImageCell";

- (void)viewDidLoad {
    [super viewDidLoad];
    [self configureUI];
    [self.presenter viewDidLoad];
}

- (void)configureUI {
    UICollectionViewFlowLayout *layout = [UICollectionViewFlowLayout new];
    layout.minimumLineSpacing = 16;
    layout.minimumInteritemSpacing = 16;
    layout.itemSize = CGSizeMake((CGRectGetWidth(self.view.frame) / 2) - 33, (CGRectGetWidth(self.view.frame) / 2) - 33);
    self.collectionView = [[UICollectionView alloc] initWithFrame:CGRectZero collectionViewLayout:layout];
    self.dataSource = [NSMutableArray arrayWithArray:@[]];
    [self.collectionView registerClass:[ImageCell class] forCellWithReuseIdentifier:imageCellIndetifier];
    self.collectionView.delegate = self;
    self.collectionView.backgroundColor = UIColor.whiteColor;
    self.collectionView.dataSource = self;
    [self.view addSubview:self.collectionView];
    self.collectionView.contentInset = UIEdgeInsetsMake(16, 16, 16, 16);
    self.searchController = [[UISearchController alloc] initWithSearchResultsController:nil];
    self.navigationItem.titleView = self.searchController.searchBar;
    self.searchController.hidesNavigationBarDuringPresentation = NO;
    self.searchController.dimsBackgroundDuringPresentation = NO;
    self.searchController.obscuresBackgroundDuringPresentation = NO;
    self.definesPresentationContext = YES;
    self.searchController.searchBar.delegate = self;
    self.view.backgroundColor = UIColor.whiteColor;
    self.collectionView.delaysContentTouches = NO;
    //configure UI
}

- (void)viewDidLayoutSubviews
{
    self.collectionView.frame = CGRectMake(0, self.view.safeAreaInsets.top, CGRectGetWidth(self.view.bounds), CGRectGetHeight(self.view.bounds) - self.view.safeAreaInsets.top - self.view.safeAreaInsets.bottom);
}

- (void)displayPhotos:(nonnull NSArray<Photo *> *)photos
{
    
    self.dataSource = @[];
    dispatch_async(dispatch_get_main_queue(), ^{
        [self.collectionView performBatchUpdates:^{
            [self.collectionView reloadSections:[NSIndexSet indexSetWithIndex:0]];
        } completion:^(BOOL completed){
            if (completed)
            {
                self.dataSource = photos;
                [self.collectionView performBatchUpdates:^{
                    [self.collectionView reloadSections:[NSIndexSet indexSetWithIndex:0]];
                } completion:nil];
            }
        }];
    });
}

- (void)displaySeachQuery:(NSString *)query
{
    self.searchController.searchBar.text = query;
    [self.searchController.searchBar becomeFirstResponder];
}

- (NSInteger)collectionView:(UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section
{
    return self.dataSource.count;
}

- (UICollectionViewCell *)collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath
{
    ImageCell *cell = [self.collectionView dequeueReusableCellWithReuseIdentifier:imageCellIndetifier forIndexPath:indexPath];
    Photo *photo;
    if (indexPath.row < self.dataSource.count)
    {
        photo = self.dataSource[indexPath.row];
        if (photo.image)
        {
            [cell configureWithImage:photo.image];
        }
        else
        {
            [cell configureWithImageURL:photo.imageURL andCompletion:^(UIImage *_Nonnull image) {
                photo.image = image;
            }];
        }
    }
    return cell;
}

- (void)collectionView:(UICollectionView *)collectionView didSelectItemAtIndexPath:(NSIndexPath *)indexPath
{
    [self.presenter didSelectImageCellAtIP:indexPath];
}



- (void)updateSearchResultsForSearchController:(UISearchController *)searchController
{
    if ([searchController.searchBar.text isEqualToString:@""] == NO)
    {
        [self.presenter didEnterSearchFieldWithQuery:searchController.searchBar.text];
    }
}

- (void)searchBarTextDidEndEditing:(UISearchBar *)searchBar
{
    if ([searchBar.text isEqualToString:@""] == NO)
    {
        [self.presenter didEnterSearchFieldWithQuery:searchBar.text];
    }
}

- (void)searchBarResultsListButtonClicked:(UISearchBar *)searchBar
{
    if ([searchBar.text isEqualToString:@""] == NO)
    {
        [self.presenter didEnterSearchFieldWithQuery:searchBar.text];
    }
}

@end
